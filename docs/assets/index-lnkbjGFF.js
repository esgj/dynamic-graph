var m=Object.defineProperty;var y=(i,t,e)=>t in i?m(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var r=(i,t,e)=>(y(i,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function e(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(n){if(n.ep)return;n.ep=!0;const o=e(n);fetch(n.href,o)}})();class d{constructor(t,e){r(this,"x");r(this,"y");this.x=t,this.y=e}addVector(t){this.x+=t.x,this.y+=t.y}}class w{constructor(t,e){r(this,"p1");r(this,"p2");this.p1=t,this.p2=e}equals(t){return t.p1.equals(this.p1)&&t.p2.equals(this.p2)||t.p1.equals(this.p2)&&t.p2.equals(this.p1)}draw(t,e={gravity:!1}){e.gravity&&this.calcGravity();let s=578289663,n=this.mapNumRange(this.p1.getDistance(this.p2),l,250);t.strokeStyle=`#${(s-n).toString(16)}`,t.beginPath(),t.moveTo(this.p1.x,this.p1.y),t.lineTo(this.p2.x,this.p2.y),t.stroke()}calcGravity(){let t=5-this.mapNumRange(this.p1.getDistance(this.p2),l,5),e=new d(this.p1.x-this.p2.x,this.p1.y-this.p2.y),s=new d(this.p2.x-this.p1.x,this.p2.y-this.p1.y);e.x*=1e-4*t,e.y*=1e-4*t,s.x*=1e-4*t,s.y*=1e-4*t,this.p1.vector.addVector(s),this.p2.vector.addVector(e)}mapNumRange(t,e,s){return Math.floor(t/e*s)}}class v{constructor(t,e){r(this,"points",[]);r(this,"segments",[]);r(this,"maxSegmentDistance",Number.MAX_SAFE_INTEGER);r(this,"gravity",!1);this.points=t,e&&(this.maxSegmentDistance=e)}toggleGravity(){this.gravity=!this.gravity}addPoint(t){this.points.push(t)}tryAddSegment(t){this.doesSegmentExist(t)||this.segments.push(t)}generateSegments(){this.removeSegments();for(let t=0;t<this.points.length;t++)for(let e=0;e<this.points.length;e++)if(t!=e&&this.points[t].getDistance(this.points[e])<this.maxSegmentDistance){let s=new w(this.points[t],this.points[e]);this.tryAddSegment(s)}}removeSegments(){for(const t of this.segments)t.p1.getDistance(t.p2)>this.maxSegmentDistance&&this.segments.splice(this.segments.indexOf(t))}doesSegmentExist(t){for(const e of this.segments)if(e.equals(t))return!0;return!1}render(t){t.clearRect(0,0,window.innerWidth,window.innerHeight),this.generateSegments();for(const e of this.points)e.draw(t);for(const e of this.segments)e.draw(t,{gravity:!this.gravity})}}class p{constructor(t,e){r(this,"x",0);r(this,"y",0);r(this,"vector");this.x=t,this.y=e,this.vector=new d(Math.random()*2,Math.random()*2)}equals(t){return this.x==t.x&&this.y==t.y}getDistance(t){return Math.hypot(this.x-t.x,this.y-t.y)}calcNewPosition(){this.x+=this.vector.x,this.y+=this.vector.y,this.y>=window.innerHeight&&(this.vector.y*=-1),this.x>=window.innerWidth&&(this.vector.x*=-1),this.x<=0&&(this.vector.x=Math.abs(this.vector.x)),this.y<=0&&(this.vector.y=Math.abs(this.vector.y))}draw(t,e={size:15}){this.calcNewPosition();let s=e.size/2;t.beginPath(),t.arc(this.x,this.y,s,0,Math.PI*2),t.fillStyle="#27f",t.fill()}}let a=document.createElement("canvas");a.height=window.innerHeight;a.width=window.innerWidth;a.style.backgroundColor="#000";var u;(u=document.querySelector("#app"))==null||u.appendChild(a);let g=a.getContext("2d"),x=new p(Math.floor(window.innerWidth/2),Math.floor(window.innerHeight/2));const l=window.innerWidth/3;let h=new v([x],l);window.addEventListener("click",()=>{let i=Math.floor(Math.random()*window.innerWidth),t=Math.floor(Math.random()*window.innerHeight);h.addPoint(new p(i,t))});window.addEventListener("touchend",()=>{let i=Math.floor(Math.random()*window.innerWidth),t=Math.floor(Math.random()*window.innerHeight);h.addPoint(new p(i,t))});function M(i){return i==0?0:i*(i-1)/2}function f(){document.querySelector("#nodes").innerHTML=`Nodes: ${h.points.length}`,document.querySelector("#connections").innerHTML=`Connections: ${h.segments.length}`,document.querySelector("#max-connections").innerHTML=`Max number of connections possible: ${M(h.points.length)}`,g&&h.render(g),requestAnimationFrame(f)}f();
